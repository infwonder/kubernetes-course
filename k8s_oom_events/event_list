# HELP go_gc_duration_seconds A summary of the GC invocation durations.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 8.9246e-05
go_gc_duration_seconds{quantile="0.25"} 0.000131757
go_gc_duration_seconds{quantile="0.5"} 0.000151604
go_gc_duration_seconds{quantile="0.75"} 0.000180658
go_gc_duration_seconds{quantile="1"} 0.000382017
go_gc_duration_seconds_sum 10.138409896
go_gc_duration_seconds_count 15328
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 84
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.12.9"} 1
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 6.594352e+06
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 5.8432264392e+10
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.951538e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 3.90030028e+08
# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.
# TYPE go_memstats_gc_cpu_fraction gauge
go_memstats_gc_cpu_fraction 1.97930951455964e-05
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 2.451456e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 6.594352e+06
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 5.3649408e+07
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 9.822208e+06
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 29775
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 4.9963008e+07
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 6.3471616e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.5959700721595144e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 3.90059803e+08
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 222208
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 245760
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 143424
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 180224
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 1.0757744e+07
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 5.132742e+06
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 3.637248e+06
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 3.637248e+06
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 7.7070584e+07
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 39
# HELP kube_state_metrics_list_total Number of total resource list in kube-state-metrics
# TYPE kube_state_metrics_list_total counter
kube_state_metrics_list_total{resource="*v1.ConfigMap",result="success"} 1
kube_state_metrics_list_total{resource="*v1.DaemonSet",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Deployment",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Endpoints",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Job",result="success"} 1
kube_state_metrics_list_total{resource="*v1.LimitRange",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Namespace",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Node",result="success"} 1
kube_state_metrics_list_total{resource="*v1.PersistentVolume",result="success"} 1
kube_state_metrics_list_total{resource="*v1.PersistentVolumeClaim",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Pod",result="success"} 1
kube_state_metrics_list_total{resource="*v1.ReplicaSet",result="success"} 1
kube_state_metrics_list_total{resource="*v1.ReplicationController",result="success"} 1
kube_state_metrics_list_total{resource="*v1.ResourceQuota",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Secret",result="success"} 1
kube_state_metrics_list_total{resource="*v1.Service",result="success"} 1
kube_state_metrics_list_total{resource="*v1.StatefulSet",result="success"} 1
kube_state_metrics_list_total{resource="*v1.StorageClass",result="success"} 1
kube_state_metrics_list_total{resource="*v1beta1.CertificateSigningRequest",result="success"} 1
kube_state_metrics_list_total{resource="*v1beta1.CronJob",result="success"} 1
kube_state_metrics_list_total{resource="*v1beta1.Ingress",result="success"} 1
kube_state_metrics_list_total{resource="*v1beta1.PodDisruptionBudget",result="success"} 1
kube_state_metrics_list_total{resource="*v2beta1.HorizontalPodAutoscaler",result="success"} 1
# HELP kube_state_metrics_watch_total Number of total resource watches in kube-state-metrics
# TYPE kube_state_metrics_watch_total counter
kube_state_metrics_watch_total{resource="*v1.ConfigMap",result="success"} 3852
kube_state_metrics_watch_total{resource="*v1.DaemonSet",result="success"} 3863
kube_state_metrics_watch_total{resource="*v1.Deployment",result="success"} 3887
kube_state_metrics_watch_total{resource="*v1.Endpoints",result="success"} 3843
kube_state_metrics_watch_total{resource="*v1.Job",result="success"} 3862
kube_state_metrics_watch_total{resource="*v1.LimitRange",result="success"} 3874
kube_state_metrics_watch_total{resource="*v1.Namespace",result="success"} 3861
kube_state_metrics_watch_total{resource="*v1.Node",result="success"} 3851
kube_state_metrics_watch_total{resource="*v1.PersistentVolume",result="success"} 3877
kube_state_metrics_watch_total{resource="*v1.PersistentVolumeClaim",result="success"} 3886
kube_state_metrics_watch_total{resource="*v1.Pod",result="success"} 3863
kube_state_metrics_watch_total{resource="*v1.ReplicaSet",result="success"} 3875
kube_state_metrics_watch_total{resource="*v1.ReplicationController",result="success"} 3882
kube_state_metrics_watch_total{resource="*v1.ResourceQuota",result="success"} 3870
kube_state_metrics_watch_total{resource="*v1.Secret",result="success"} 3851
kube_state_metrics_watch_total{resource="*v1.Service",result="success"} 3872
kube_state_metrics_watch_total{resource="*v1.StatefulSet",result="success"} 3856
kube_state_metrics_watch_total{resource="*v1.StorageClass",result="success"} 3872
kube_state_metrics_watch_total{resource="*v1beta1.CertificateSigningRequest",result="success"} 3854
kube_state_metrics_watch_total{resource="*v1beta1.CronJob",result="success"} 3866
kube_state_metrics_watch_total{resource="*v1beta1.Ingress",result="success"} 3873
kube_state_metrics_watch_total{resource="*v1beta1.PodDisruptionBudget",result="success"} 3878
kube_state_metrics_watch_total{resource="*v2beta1.HorizontalPodAutoscaler",result="success"} 3867
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 1782
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1.048576e+06
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 11
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 3.3943552e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.59423370724e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 1.42729216e+08
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes -1
